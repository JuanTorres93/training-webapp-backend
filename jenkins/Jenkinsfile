pipeline {
    agent any
    // TODO make WORKSPACE an environment variable
    environment {
        TEST_BACK_ENV_FILE = credentials('trackoverload_test_back_env')
        TEST_DB_ENV_FILE = credentials('trackoverload_test_db_env')
        JENKINS_DOCKER_TEST_NET = 'jenkins-docker-test-net'
        TEST_DB_CONTAINER_NAME = 'jenkins-trackoverload-test-db'
    }

    stages {
        stage('Build') {
            steps {
                sh '''
                    ./jenkins/build/build.sh
                '''
            }

            post {
                success {
                    sh '''
                        ./jenkins/test/upTestDB.sh
                        sleep 5 # Wait for the database to start
                    '''
                }
                failure {
                    exit 1
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def result = sh(
                        script: '''
                            ./jenkins/test/test.sh
                        ''', 
                        returnStatus: true
                    )
                    if (result != 0) {
                        error "Tests failed"
                        exit 1
                    }
                }
            }

            post {
                always {
                    sh '''
                        docker stop ${TEST_DB_CONTAINER_NAME}
                    '''
                }
            }
        }
        stage('Create Docker Image') {
            steps {
                echo 'Creating Docker image..'
                // TODO Remove when implementing this step
                exit 1
            }
        }
        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image..'
                // TODO Remove when implementing this step
                exit 1
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
                // TODO Remove when implementing this step
                exit 1
            }
        }
    }
}
