openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KASHYR26/training-webapp/1.0.0
info:
  version: "1.0.0"
  title: training-webapp
  description: The API for the training tracker webapp
paths:
  /users:
    get:
      tags:
        - Users
      description: Returns all registered users
      operationId: getAllUsers
      responses:
        "200":
          description: All the users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseUser"

    post:
      tags:
        - Users
      operationId: registerUser
      description: Create new user
      responses:
        "201":
          description: Successfully registered user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUser"

        "400":
          $ref: "#/components/responses/400"

        "409":
          $ref: "#/components/responses/409"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyCreateUser"

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: User id
        schema:
          type: integer
    get:
      tags:
        - Users
      description: Returns the user specified by id
      operationId: getUserById
      responses:
        "200":
          description: Single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUser"

        "400":
          $ref: "#/components/responses/400"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"
    put:
      tags:
        - Users
      operationId: updateUser
      description: Update existing user
      responses:
        "200":
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUser"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyUpdateUser"
    delete:
      tags:
        - Users
      description: "Delete the user specified by id"
      responses:
        "200":
          description: Deletes users and returns it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUser"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /exercises:
    get:
      tags:
        - Exercises
      description: Returns all exercises
      operationId: getAllExercises
      responses:
        "200":
          description: List of all exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseExercise"
    post:
      tags:
        - Exercises
      description: Create new exercise
      operationId: createNewExercise
      responses:
        "201":
          description: Successfully created exercise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyCreateExercise"

  /exercises/{exerciseId}:
    parameters:
      - name: exerciseId
        in: path
        required: true
        description: Exercise id
        schema:
          type: integer
    get:
      tags:
        - Exercises
      description: Returns the exercise specified by id
      operationId: getExerciseById
      responses:
        "200":
          description: Single exercise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseExercise"

        "400":
          $ref: "#/components/responses/400"

        "404":
          $ref: "#/components/responses/404"

    put:
      tags:
        - Exercises
      description: Update exercise specified by id
      operationId: updateExercise
      responses:
        "200":
          description: Successfully updated exercise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyUpdateExercise"

    delete:
      tags:
        - Exercises
      description: "Delete the exercise specified by id"
      responses:
        "200":
          description: Deletes exercise and returns it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /exercises/all/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: userid
        schema:
          type: integer
    get:
      tags:
        - Exercises
      description: Returns all the exercises of the user
      operationId: getAllExercisesFrom user
      responses:
        "200":
          description: All exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /exercises/common:
    get:
      tags:
        - Exercises
      description: Returns all common exercises that all users can see
      operationId: getCommonExercises
      responses:
        "200":
          description: All common exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseExercise"

        "401":
          $ref: "#/components/responses/401"

  /workouts:
    get:
      tags:
        - Workouts
      description: Returns all workouts
      operationId: getAllWorkouts
      responses:
        "200":
          description: List of all workouts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseWorkout"

    post:
      tags:
        - Workouts
      description: Create new workout
      operationId: createNewWorkout
      responses:
        "201":
          description: Successfully created workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCreateWorkout"
              examples:
                Workout:
                  $ref: "#/components/examples/CreateWorkout"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyCreateWorkout"

  /workouts/{workoutId}:
    parameters:
      - name: workoutId
        in: path
        required: true
        description: Workout id
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Returns a single workout
      operationId: getWorkoutById
      responses:
        "200":
          description: Single workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkout"
              examples:
                Workout:
                  $ref: "#/components/examples/Workout"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

    post:
      tags:
        - Workouts
      description: Adds exercise to workout
      operationId: addExerciseToWorkout
      responses:
        "201":
          description: Successfully added exercise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAddExerciseToWorkout"
              examples:
                AddedExercise:
                  $ref: "#/components/examples/ExerciseFromWorkout"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyAddExerciseToWorkout"
            examples:
              AddExerciseToWorkout:
                $ref: "#/components/examples/ExerciseFromWorkout"

    put:
      tags:
        - Workouts
      description: Update workout
      operationId: updateWorkout
      responses:
        "200":
          description: Successfully updated workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkout"
              examples:
                UpdatedWorkout:
                  $ref: "#/components/examples/CreateWorkout"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyUpdateWorkout"
            examples:
              UpdateWorkout:
                $ref: "#/components/examples/CreateWorkout"

    delete:
      tags:
        - Workouts
      description: Delete workout
      operationId: deleteWorkout
      responses:
        "200":
          description: Successfully deleted workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkout"
              examples:
                DeletedWorkout:
                  $ref: "#/components/examples/Workout"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/all/{templateName}:
    parameters:
      - name: templateName
        in: path
        required: true
        description: Workout id
        schema:
          type: string
    get:
      tags:
        - Workouts
      description: Returns every workout id for a given template
      operationId: getWorkoutNameFromTemplateName
      responses:
        "200":
          description: Array of workout ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

  /workouts/addFinishDate/{workoutId}:
    parameters:
      - name: workoutId
        in: path
        required: true
        description: Workout id
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Adds current date as finish date for workout
      operationId: addFinishDateToWorkout
      responses:
        "200":
          description: Successfully updated workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkout"
              examples:
                UpdatedWorkout:
                  $ref: "#/components/examples/CreateWorkout"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/last/{templateId}/user/{userId}:
    parameters:
      - name: templateId
        in: path
        required: true
        description: Template id
        schema:
          type: integer
      - name: userId
        in: path
        required: true
        description: User id
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Returns last workout based on template from user
      operationId: getWorkoutLastTemplateWorkoutFromUser
      responses:
        "200":
          description: Returns last workout from template from user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkout"
              examples:
                Workout:
                  $ref: "#/components/examples/Workout"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/last/{templateId}/user/{userId}/{numberOfWorkouts}:
    parameters:
      - name: templateId
        in: path
        required: true
        description: Template id
        schema:
          type: integer
      - name: userId
        in: path
        required: true
        description: User id
        schema:
          type: integer
      - name: numberOfWorkouts
        in: path
        required: true
        description: Number of last workouts to retrieve
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Returns last {numberOfWorkouts} workouts based on template from user
      operationId: getNWorkoutLastTemplateWorkoutFromUser
      responses:
        "200":
          description: Returns last workouts from template from user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseWorkout"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/{workoutId}/exercises/{exerciseId}:
    parameters:
      - name: workoutId
        in: path
        required: true
        description: Workout id
        schema:
          type: integer
      - name: exerciseId
        in: path
        required: true
        description: Exercise id
        schema:
          type: integer

    put:
      tags:
        - Workouts
      description: Update exercise from workout
      operationId: updateExerciseFromWorkout
      responses:
        "200":
          description: Successfully updated exercise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateExerciseFromWorkout"
              examples:
                Workout:
                  $ref: "#/components/examples/UpdateExerciseFromWorkout"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyUpdateExerciseFromWorkout"
            examples:
              UpdateWorkoutExercise:
                $ref: "#/components/examples/ReqBodyUpdateExerciseFromWorkout"

    delete:
      tags:
        - Workouts
      description: Delete exercise with all of its sets from workout
      operationId: deleteWorkoutExercise
      responses:
        "200":
          description: Successfully deleted exercise from workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAddExerciseToWorkout"
              examples:
                ExerciseWithAllItsSets:
                  type: array
                  $ref: "#/components/examples/ExerciseWithMultipleSets"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/{workoutId}/exercises/{exerciseId}/{exerciseSet}:
    parameters:
      - name: workoutId
        in: path
        required: true
        description: Workout id
        schema:
          type: integer
      - name: exerciseId
        in: path
        required: true
        description: Exercise id
        schema:
          type: integer
      - name: exerciseSet
        in: path
        required: true
        description: Exercise set
        schema:
          type: integer

    delete:
      tags:
        - Workouts
      description: Delete exercise set from workout
      operationId: deleteWorkoutExerciseSet
      responses:
        "200":
          description: Successfully deleted exercise set from workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAddExerciseToWorkout"
              examples:
                Workout:
                  $ref: "#/components/examples/ExerciseFromWorkout"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/templates:
    get:
      tags:
        - Workouts
      description: Returns all templates
      operationId: getWorkoutAllTemplates
      responses:
        "200":
          description: Returns all templates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAllWorkoutTemplates"
              examples:
                Workout:
                  $ref: "#/components/examples/AllWorkoutTemplates"

        "401":
          $ref: "#/components/responses/401"

    post:
      tags:
        - Workouts
      description: Creates new workout template
      operationId: createNewWorkoutTemplate
      responses:
        "201":
          description: Successfully created template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkoutTemplate"
              examples:
                NewWorkoutTemplate:
                  $ref: "#/components/examples/NewWorkoutTemplate"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyCreateWorkoutTemplate"
            examples:
              CreateWorkoutTemplate:
                $ref: "#/components/examples/CreateWorkoutTemplate"

  /workouts/templates/all/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: User id
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Returns all templates from a user
      operationId: getWorkoutAllTemplatesFromUser
      responses:
        "200":
          description: Returns all templates from user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAllWorkoutTemplates"
              examples:
                Workout:
                  $ref: "#/components/examples/AllWorkoutTemplates"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/templates/common:
    get:
      tags:
        - Workouts
      description: Returns all common templates
      operationId: getWorkoutCommonTemplates
      responses:
        "200":
          description: Returns all common templates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAllWorkoutTemplates"
              examples:
                Workout:
                  $ref: "#/components/examples/AllWorkoutTemplates"

        "401":
          $ref: "#/components/responses/401"

  /workouts/templates/{templateId}:
    parameters:
      - name: templateId
        in: path
        required: true
        description: Template id
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Returns a single workout template
      operationId: getWorkoutTemplateById
      responses:
        "200":
          description: Single workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutTemplate"
              examples:
                Workout:
                  $ref: "#/components/examples/WorkoutTemplate"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

    post:
      tags:
        - Workouts
      description: Adds exercise to workout template
      operationId: addExerciseToWorkoutTemplate
      responses:
        "201":
          description: Successfully added exercise to template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkoutTemplateExercise"
              examples:
                Workout:
                  $ref: "#/components/examples/WorkoutTemplateExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyAddExerciseToWorkoutTemplate"
            examples:
              AddExerciseToWorkoutTemplate:
                $ref: "#/components/examples/AddExerciseToWorkoutTemplate"

    put:
      tags:
        - Workouts
      description: Updates workout template
      operationId: updateNewWorkoutTemplate
      responses:
        "200":
          description: Successfully updated template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkoutTemplate"
              examples:
                NewWorkoutTemplate:
                  $ref: "#/components/examples/WorkoutTemplate"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyUpdateWorkoutTemplate"
            examples:
              UpdateWorkoutTemplate:
                $ref: "#/components/examples/UpdateWorkoutTemplate"

    delete:
      tags:
        - Workouts
      description: Delete workout template
      operationId: deleteWorkoutTemplate
      responses:
        "200":
          description: Successfully deleted workout template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkoutTemplate"
              examples:
                DeletedWorkoutTemplate:
                  $ref: "#/components/examples/WorkoutTemplate"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /workouts/templates/last/user/{userId}/{numberOfWorkouts}:
    parameters:
      - name: userId
        in: path
        required: true
        description: User id
        schema:
          type: integer
      - name: numberOfWorkouts
        in: path
        required: true
        description: Number of last workouts to retrieve
        schema:
          type: integer
    get:
      tags:
        - Workouts
      description: Returns last {numberOfWorkouts} workouts from user
      operationId: getLastTempleatesPerformedByUser
      responses:
        "200":
          description: Returns last templates performed by user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseCarouselInfo"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

  /workouts/templates/{templateId}/exercises/{exerciseId}/{exerciseOrder}:
    parameters:
      - name: templateId
        in: path
        required: true
        description: Template id
        schema:
          type: integer
      - name: exerciseId
        in: path
        required: true
        description: Exercise id
        schema:
          type: integer
      - name: exerciseOrder
        in: path
        required: true
        description: Exercise order
        schema:
          type: integer

    put:
      tags:
        - Workouts
      description: Updates exercise from workout template
      operationId: updateExerciseToWorkoutTemplate
      responses:
        "200":
          description: Successfully updated exercise to template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkoutTemplateExercise"
              examples:
                UpdatedExercise:
                  $ref: "#/components/examples/WorkoutTemplateExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyUpdateExerciseFromWorkoutTemplate"
            examples:
              UpdateExerciseToWorkoutTemplate:
                $ref: "#/components/examples/UpdateExerciseToWorkoutTemplate"

    delete:
      tags:
        - Workouts
      description: Deletes exercise from workout template
      operationId: deleteExerciseToWorkoutTemplate
      responses:
        "200":
          description: Successfully deleted exercise to template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkoutTemplateExercise"
              examples:
                UpdatedExercise:
                  $ref: "#/components/examples/WorkoutTemplateExercise"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "404":
          $ref: "#/components/responses/404"

  /weights/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: User id
        schema:
          type: string
    get:
      tags:
        - Weights
      description: Returns all registered weights for user
      operationId: getAllWeightsForUser
      responses:
        "200":
          description: All the weights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseWeight"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

    post:
      tags:
        - Weights
      operationId: registerWeight
      description: Create new weight entry for user in the current day
      responses:
        "201":
          description: Successfully registered user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWeight"

        "400":
          $ref: "#/components/responses/400"

        "401":
          $ref: "#/components/responses/401"

        "403":
          $ref: "#/components/responses/403"

        "409":
          $ref: "#/components/responses/409"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqBodyCreateNewWeight"

components:
  schemas:
    ResponseUser:
      type: object
      properties:
        id:
          type: string
          description: User uuid
        username:
          type: string
          description: User name
        email:
          type: string
          description: User email
        subscription_id:
          type: string
          description: User subscription type
        last_name:
          type: string
          description: User last name
        img:
          type: string
          description: User profile image's URI
        second_last_name:
          type: string
          description: User second last name
        is_premium:
          type: boolean
          description: User premium status
        is_early_adopter:
          type: boolean
          description: User early adopter status
        created_at:
          type: string
          description: User creation date
      example:
        id: "09b1b3b0-7b3b-4b3b-8b3b-0b3b3b3b3b3b"
        username: "John"
        email: "John.Doe@domain.com"
        subscription_id: "7847b3b0-7b3b-4b3b-8b3b-0b3b3b3b3b3b"
        last_name: "Doe"
        img: "Link to img"
        second_last_name: "Smith"
        is_premium: false
        is_early_adopter: true
        created_at: "2021-06-01T00:00:00.000Z"
      description: User object

    ReqBodyCreateUser:
      type: object
      required:
        - username
        - email
        - password
        - subscription_type
        - is_premium
        - is_early_adopter
        - created_at
      properties:
        username:
          type: string
          description: User name
        email:
          type: string
          description: User email
        subscription_id:
          type: string
          description: User subscription type. Server will get its id from db.
        password:
          type: string
          description: User password
        is_premium:
          type: boolean
          description: User premium status
        is_early_adopter:
          type: boolean
          description: User early adopter status
        created_at:
          type: string
          description: User creation date
        oauth_registration:
          type: string
          description: 4 letter string to identify the platform the user registered with. GOOG -> Google. If null, user registered with email
      example:
        username: "John"
        email: "John.Doe@domain.com"
        password: "secure_password"
        subscription_type: "FREE"
        is_premium: false
        is_early_adopter: true
        created_at: "2021-06-01T00:00:00.000Z"
        oauth_registration: "GOOG"

      description: Info needed to create user object

    ReqBodyUpdateUser:
      type: object
      properties:
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password
        last_name:
          type: string
          description: User last name
        second_last_name:
          type: string
          description: User second last name
        img:
          type: string
          description: User profile image

      example:
        name: "John"
        email: "John.Doe@domain.com"
        last_name: "Doe"
        password: "secure_password"
        second_last_name: "Smith"
        # TODO research about how to handle it from server. This is susceptible of beign changed
        img: "Link to img"
      description: Info needed to update user object

    ResponseExercise:
      type: object
      properties:
        id:
          type: integer
          description: Exercise id
        name:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
      example:
        id: 3
        name: "Bicep curl"
        description: "A staple in strength training, this exercise targets the biceps brachii muscle group. Executed with dumbbells or a barbell, the movement involves flexing the elbow to lift the weight towards the shoulders while keeping the upper arms stationary. Proper form is crucial to isolate the biceps and prevent swinging or momentum. It strengthens the biceps, improves arm aesthetics, and aids in functional movements like lifting."
      description: Exercise object

    ResponseWorkoutTemplateExercise:
      type: object
      properties:
        workoutTemplateId:
          type: integer
          description: Workout template's id that owns the exercise
        exerciseId:
          type: integer
          description: Exercise id
        exerciseOrder:
          type: integer
          description: Order in which the exercise is performed
        exerciseSets:
          type: integer
          description: Number of sets of the exercise to perform
      example:
        id: 3
        name: "Bicep curl"
        description: "A staple in strength training, this exercise targets the biceps brachii muscle group. Executed with dumbbells or a barbell, the movement involves flexing the elbow to lift the weight towards the shoulders while keeping the upper arms stationary. Proper form is crucial to isolate the biceps and prevent swinging or momentum. It strengthens the biceps, improves arm aesthetics, and aids in functional movements like lifting."
      description: Exercise object

    ReqBodyCreateExercise:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
      example:
        name: "Bicep curl"
        description: "A staple in strength training, this exercise targets the biceps brachii muscle group. Executed with dumbbells or a barbell, the movement involves flexing the elbow to lift the weight towards the shoulders while keeping the upper arms stationary. Proper form is crucial to isolate the biceps and prevent swinging or momentum. It strengthens the biceps, improves arm aesthetics, and aids in functional movements like lifting."
      description: Exercise object

    ReqBodyUpdateExercise:
      type: object
      properties:
        name:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
      example:
        name: "Bicep curl"
        description: "A staple in strength training, this exercise targets the biceps brachii muscle group. Executed with dumbbells or a barbell, the movement involves flexing the elbow to lift the weight towards the shoulders while keeping the upper arms stationary. Proper form is crucial to isolate the biceps and prevent swinging or momentum. It strengthens the biceps, improves arm aesthetics, and aids in functional movements like lifting."
      description: Exercise object

    WorkoutExercise:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Exercise name
        set:
          type: integer
          description: Set number of the exercise
        reps:
          type: integer
          description: Number of reps that were performed
        weight:
          type: number
          description: Weight used in the set
        time_in_seconds:
          type: integer
          description: Time in seconds that the set spanned

    ReqBodyAddExerciseToWorkout:
      type: object
      required:
        - exerciseId
        - exerciseSet
      properties:
        exerciseId:
          type: integer
          description: Id of the exercise
        exerciseSet:
          type: integer
          description: Number of the set in which the exercise was performed
        reps:
          type: integer
          description: Number of reps performed
        weight:
          type: number
          description: Weight used
        time_in_seconds:
          type: integer
          description: Time in seconds that the exercise spanned

    ReqBodyUpdateExerciseFromWorkout:
      type: object
      required:
        - exerciseSet
      properties:
        exerciseSet:
          type: integer
          description: Number of the set in which the exercise was performed
        reps:
          type: integer
          description: Number of reps performed
        weight:
          type: number
          description: Weight used
        time_in_seconds:
          type: integer
          description: Time in seconds that the exercise spanned

    ResponseAddExerciseToWorkout:
      type: object
      required:
        - exerciseId
        - exerciseSet
      properties:
        exerciseId:
          type: integer
          description: Id of the exercise
        exerciseSet:
          type: integer
          description: Number of the set in which the exercise was performed
        reps:
          type: integer
          description: Number of reps performed
        weight:
          type: number
          description: Weight used
        time_in_seconds:
          type: integer
          description: Time in seconds that the exercise spanned

    UpdateExerciseFromWorkout:
      type: object
      required:
        - exerciseSet
      properties:
        exerciseSet:
          type: integer
          description: Number of the set in which the exercise was performed
        reps:
          type: integer
          description: Number of reps performed
        weight:
          type: number
          description: Weight used
        time_in_seconds:
          type: integer
          description: Time in seconds that the exercise spanned

    ReqBodyAddExerciseToWorkoutTemplate:
      type: object
      required:
        - exerciseId
        - exerciseOrder
        - exerciseSets
      properties:
        exerciseId:
          type: integer
          description: Id of the exercise to include in the template
        exerciseOrder:
          type: integer
          description: Order of the exercise in the template
        exerciseSets:
          type: integer
          description: Number of sets of the exercise to perform

    ReqBodyUpdateExerciseFromWorkoutTemplate:
      type: object
      properties:
        newExerciseOrder:
          type: integer
          description: Order of the exercise in the template
        exerciseSets:
          type: integer
          description: Number of sets of the exercise to perform

    ResponseWorkout:
      type: object
      properties:
        id:
          type: string
          description: Id of the workout (UUID)
        template_id:
          type: string
          description: Id of the template (UUID)
        name:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise description
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/WorkoutExercise"

    ResponseCarouselInfo:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          description: start date
        name:
          type: string
          description: Name of the template

    ReqBodyCreateWorkout:
      type: object
      required:
        - template_id
      properties:
        template_id:
          type: string
          description: Id of the template (UUID)
        description:
          type: string
          description: Workout description
      example:
        template_id: "9876234-1234-1234-1234-123456789012"
        description: "Pulling routine for back and bicep strenghtening"
      description: Workout object

    ResponseCreateWorkout:
      type: object
      properties:
        id:
          type: integer
          description: Workout id
        template_id:
          type: string
          description: Id of the template (UUID)
        name:
          type: string
          description: Template name
        description:
          type: string
          description: Workout description
      example:
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"
      description: Workout object

    ReqBodyUpdateWorkout:
      type: object
      properties:
        name:
          type: string
          description: Workout name
        description:
          type: string
          description: Workout description
      example:
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"
      description: Workout object

    ReqBodyCreateWorkoutTemplate:
      type: object
      required:
        - userId
        - name
      properties:
        userId:
          type: integer
          description: Id of the user that owns the template
        name:
          type: string
          description: Workout name
        description:
          type: string
          description: Workout description
      example:
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"
      description: Workout object

    ReqBodyUpdateWorkoutTemplate:
      type: object
      properties:
        name:
          type: string
          description: Workout name
        description:
          type: string
          description: Workout description
      example:
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"
      description: Workout object

    ResponseWorkoutTemplate:
      type: object
      required:
        - userId
        - name
      properties:
        userId:
          type: integer
          description: Id of the user that owns the template
        name:
          type: string
          description: Workout name
        description:
          type: string
          description: Workout description
      example:
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"
      description: Workout object

    WorkoutTemplate:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/WorkoutTemplate"

    ResponseAllWorkoutTemplates:
      type: array
      items:
        $ref: "#/components/schemas/WorkoutTemplate"

    ResponseWeight:
      type: object
      properties:
        date:
          type: string
          description: Date of the weight entry
        userId:
          type: string
          description: User id
        value:
          type: number
          description: Weight value
      example:
        date: "2021-06-01"
        userId: "09b1b3b0-7b3b-4b3b-8b3b-0b3b3b3b3b3b"
        value: 76.4
      description: User object

    ReqBodyCreateNewWeight:
      type: object
      required:
        - date
        - value
      properties:
        date:
          type: string
          description: Date of the weight entry
        value:
          type: number
          description: Weight value
      example:
        date: "2021-06-01"
        value: 76.4

      description: Info needed to create weight object

  responses:
    400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                description: Error messagge.
            example:
              msg: Wrong or missing parameter

    401:
      description: Not logged in
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                description: Error messagge.

            example:
              msg: Need to log in

    403:
      description: Not having permissions to access information
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                description: Error messagge.
          example:
            msg: Don't have permissions to access information

    404:
      description: Resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                description: Error messagge.

            example:
              msg: Resource was not found

    409:
      description: Already existing
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                description: Error messagge.

            example:
              msg: Already existing resource

  examples:
    WorkoutExercise:
      value:
        id: 4
        name: Pull up
        set: 3
        reps: 9
        weight: 7.5
        time_in_seconds: Null

    Workout:
      value:
        id: "8755b3b0-7b3b-4b3b-8b3b-0b3b3b3b3b3b"
        template_id: "9876234-1234-1234-1234-123456789012"
        name: Pull
        description: "Pull training routine"
        exercises:
          - id: 4
            name: Pull up
            set: 1
            reps: 9
            weight: 7.5
            time_in_seconds: Null
          - id: 4
            name: Pull up
            set: 2
            reps: 9
            weight: 7.5
            time_in_seconds: Null
          - id: 4
            name: Pull up
            set: 3
            reps: 8
            weight: 7.5
            time_in_seconds: Null
          - id: 5
            name: Barbell row
            set: 1
            reps: 8
            weight: 75
            time_in_seconds: Null
          - id: 5
            name: Barbell row
            set: 2
            reps: 8
            weight: 75
            time_in_seconds: Null
          - id: 5
            name: Barbell row
            set: 3
            reps: 7
            weight: 75
            time_in_seconds: Null

    WorkoutTemplate:
      value:
        id: 2
        name: Pull
        description: "Pull training routine"
        exercises:
          - id: 4
            name: Pull up
            order: 1
            sets: 3
          - id: 5
            name: Barbell rows
            order: 2
            sets: 3
          - id: 5
            name: Biceps curl
            order: 3
            sets: 3

    WorkoutTemplateExercise:
      value:
        workoutTemplateId: 2
        exerciseId: 7
        exerciseOrder: 2
        exerciseSets: 3

    AllWorkoutTemplates:
      value:
        - id: 1
          name: Push
          description: "Push training routine"
          exercises:
            - id: 1
              name: Bench press
              order: 1
              sets: 3
            - id: 2
              name: Military press
              order: 2
              sets: 3
            - id: 3
              name: Dips
              order: 3
              sets: 3
        - id: 2
          name: Pull
          description: "Pull training routine"
          exercises:
            - id: 4
              name: Pull up
              order: 1
              sets: 3
            - id: 5
              name: Barbell rows
              order: 2
              sets: 3
            - id: 5
              name: Biceps curl
              order: 3
              sets: 3

    CreateWorkout:
      value:
        id: 6
        template_id: "9876234-1234-1234-1234-123456789012"
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"
        exercises: []

    CreateWorkoutTemplate:
      value:
        userId: 2
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"

    UpdateWorkoutTemplate:
      value:
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"

    NewWorkoutTemplate:
      value:
        id: 1
        userId: 2
        name: "Pull"
        description: "Pulling routine for back and bicep strenghtening"

    ExerciseFromWorkout:
      value:
        exerciseId: 1
        exerciseSet: 2
        reps: 7
        weight: 80
        time_in_seconds: null

    ExerciseWithMultipleSets:
      value:
        - exerciseId: 1
          exerciseSet: 1
          reps: 7
          weight: 80
          time_in_seconds: null
        - exerciseId: 1
          exerciseSet: 2
          reps: 7
          weight: 80
          time_in_seconds: null
        - exerciseId: 1
          exerciseSet: 3
          reps: 6
          weight: 80
          time_in_seconds: null

    ReqBodyUpdateExerciseFromWorkout:
      value:
        exerciseSet: 2
        reps: 7
        weight: 80
        time_in_seconds: null

    UpdateExerciseFromWorkout:
      value:
        exerciseId: 1
        exerciseSet: 2
        reps: 7
        weight: 80
        time_in_seconds: null

    RemoveOneSetFromExerciseWorkout:
      value:
        exerciseSet: 2
        RemoveAll: false

    RemoveAllSetsFromExerciseWorkout:
      value:
        exerciseSet: null
        RemoveAll: true

    AddExerciseToWorkoutTemplate:
      value:
        exerciseId: 2
        exerciseOrder: 6
        exerciseSets: 4

    UpdateExerciseToWorkoutTemplate:
      value:
        newExerciseOrder: 6
        exerciseSets: 4
