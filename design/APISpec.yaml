openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KASHYR26/training-webapp/1.0.0
info:
  version: "1.0.0"
  title: home-iot-api
  description: The API for the EatBacon IOT project
paths:
  /users:
    get:
      tags:
        - Users
      description: returns all registered users
      operationId: getAllUsers
      responses:
        '200':
          description: All the users
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/User'
        '403':
          description: Not having permissions to access information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
    post:
      tags:
        - Users
      operationId: registerUser
      responses:
        '201':
          description: successfully registered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
                
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
              
  /users/{id}:
    get:
      tags:
        - Users
      description: returns the user specified by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        # TODO add 401?
        '404':
          description: Resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '403':
          description: Not having permissions to access information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
              
  /exercises:
    get:
      tags:
        - Exercises
      description: returns all exercises
      operationId: getAllExercises
      responses:
        '200':
          description: list of all exercises
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Exercise'
    post:
      tags:
        - Exercises
      operationId: createNewExercise
      responses:
        '201':
          description: successfully created exercise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
                
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
                
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExercise'
              
  /exercises/{id}:
    get:
      tags:
        - Exercises
      description: returns the exercise specified by id
      operationId: getExerciseById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: single exercise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        # TODO add 401?
        '404':
          description: Resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
              
  /workouts:
    get:
      tags:
        - Workouts
      description: returns all workouts
      operationId: getAllWorkouts
      responses:
        '200':
          description: list of all workouts
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Workout'
              
  /workouts/{id}:
    get:
      tags:
        - Workouts
      description: returns a single workout
      operationId: getWorkoutById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: single workout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
              
  /workouts/{id}/exercise/{exerciseId}:
    get:
      tags:
        - Workouts
      description: returns a single exercise from a workout
      operationId: getWorkoutExerciseByIds
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: exerciseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: single workout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutExercise'
              examples: 
                WorkoutExercise:
                  $ref: '#/components/examples/WorkoutExercise'
                
                
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User id
        alias:
          type: string
          description: User name
        email:
          type: string
          description: User email
        last_name:
          type: string
          description: User last name
        img:
          type: string
          description: User profile image's URI
        second_last_name:
          type: string
          description: User second last name
      example:
        id: 3
        alias: "John"
        email: 'John.Doe@domain.com'
        last_name: 'Doe'
        img: 'https://i.pinimg.com/736x/7f/64/3f/7f643f0db514d7971349c416e29e42a8.jpg'
        second_last_name: 'Smith'
      description: User object
      
    CreateUser:
      type: object
      required:
        - alias
        - email
        - password
      properties:
        alias:
          type: string
          description: User name
        email:
          type: string
          description: User email
        password:
          type: string
          description: user password
        last_name:
          type: string
          description: User last name
        second_last_name:
          type: string
          description: User second last name
      example:
        alias: "John"
        email: 'John.Doe@domain.com'
        last_name: 'Doe'
        password: 'secure_password'
        second_last_name: 'Smith'
      description: Info needed to create user object
      
    Exercise:
      type: object
      properties:
        id:
          type: integer
          description: Exercise id
        alias:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
      example:
        id: 3
        alias: "Bicep curl"
        description: "A staple in strength training, this exercise targets the biceps brachii muscle group. Executed with dumbbells or a barbell, the movement involves flexing the elbow to lift the weight towards the shoulders while keeping the upper arms stationary. Proper form is crucial to isolate the biceps and prevent swinging or momentum. It strengthens the biceps, improves arm aesthetics, and aids in functional movements like lifting."
      description: Exercise object
      
    CreateExercise:
      type: object
      required:
        - alias
      properties:
        alias:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
      example:
        alias: "Bicep curl"
        description: "A staple in strength training, this exercise targets the biceps brachii muscle group. Executed with dumbbells or a barbell, the movement involves flexing the elbow to lift the weight towards the shoulders while keeping the upper arms stationary. Proper form is crucial to isolate the biceps and prevent swinging or momentum. It strengthens the biceps, improves arm aesthetics, and aids in functional movements like lifting."
      description: Exercise object
      
    WorkoutExercise:
      type: object
      properties:
        id:
          type: integer
        alias:
          type: string
          description: Exercise name
        set:
          type: integer
          description: Set number of the exercise
        reps:
          type: integer
          description: Number of reps that were performed
        weight:
          type: number
          description: Weight used in the set
        time_in_seconds:
          type: integer
          description: Time in seconds that the set spanned
          
      
    Workout:
      type: object
      properties:
        id:
          type: integer
        alias:
          type: string
          description: Exercise name
        description:
          type: string
          description: Exercise email
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutExercise'
            
      example:
        id: 2
        alias: Pull
        description: "Pull training routine"
        exercises:
          $ref: '#/components/examples/WorkoutExercise'
        # TODO Add exercises
      
    Error400:
      type: object
      properties:
        msg:
          type: string
          description: Error messagge. 
          
      example:
        msg: Wrong or missing parameter
      
    Error404:
      type: object
      properties:
        msg:
          type: string
          description: Error messagge. 
          
      example:
        msg: Resource was not found
    
    Error403:
      type: object
      properties:
        msg:
          type: string
          description: Error messagge. 
          
      example:
        msg: Don't have permissions to access information
          
  examples:
    WorkoutExercise:
      value:
        id: 4
        alias: Pull up
        set: 3
        reps: 9
        weight: 7.5
        time_in_seconds: Null